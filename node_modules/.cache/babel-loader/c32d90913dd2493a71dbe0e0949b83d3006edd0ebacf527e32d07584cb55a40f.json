{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrater\\\\Documents\\\\GitHub\\\\progress-tracker121\\\\src\\\\Components\\\\Range.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Range = () => {\n  _s();\n  const [currentRangeValue, setCurrentRangeValue] = useState(0);\n  const rangeValues = [0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100];\n  const handleInputChange = e => {\n    setCurrentRangeValue(e.target.value);\n  };\n  const logInFunc = async () => {\n    try {\n      const response = await fetch('http://127.0.0.1:8080/update_project', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(currentRangeValue)\n      }).then(alert(\"Your Status has been updated\"));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: handleInputChange,\n      type: \"range\",\n      min: 0,\n      defaultValue: 0,\n      max: 10,\n      step: 1,\n      list: \"tick-list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"output\",\n      children: rangeValues[currentRangeValue]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        marginLeft: '40px'\n      },\n      type: \"button\",\n      className: \"submit_btn\",\n      value: \"Add Task\",\n      children: \"Update Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(Range, \"uQLOVuFsLL2GfiiYWbdKEgXxKaM=\");\n_c = Range;\nexport default Range;\nvar _c;\n$RefreshReg$(_c, \"Range\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Range","_s","currentRangeValue","setCurrentRangeValue","rangeValues","handleInputChange","e","target","value","logInFunc","response","fetch","method","headers","body","JSON","stringify","then","alert","error","console","log","children","onChange","type","min","defaultValue","max","step","list","fileName","_jsxFileName","lineNumber","columnNumber","id","style","marginLeft","className","_c","$RefreshReg$"],"sources":["C:/Users/Administrater/Documents/GitHub/progress-tracker121/src/Components/Range.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst Range = () => {\r\n  const [currentRangeValue, setCurrentRangeValue] = useState(0);\r\n  const rangeValues = [0, 10, 20, 30, 40, 50,60,70,80,90,100];\r\n\r\n  const handleInputChange = (e) => {\r\n    setCurrentRangeValue(e.target.value);\r\n  };\r\n  const logInFunc = async () => {\r\n    try{\r\n    const response = await fetch('http://127.0.0.1:8080/update_project', {\r\n      method: 'post',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(currentRangeValue)\r\n\r\n    }).then(alert(\"Your Status has been updated\"))\r\n  } catch(error){\r\n    console.log(error)\r\n  }\r\n}\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        onChange={handleInputChange}\r\n        type=\"range\"\r\n        min={0}\r\n        defaultValue={0}\r\n        max={10}\r\n        step={1}\r\n        list=\"tick-list\"\r\n      />\r\n      {/* <datalist id=\"tick-list\">\r\n        <option>0</option>\r\n        <option>1</option>\r\n        <option>2</option>\r\n        <option>3</option>\r\n        <option>4</option>\r\n        <option>5</option>\r\n      </datalist> */}\r\n      <span id=\"output\">{rangeValues[currentRangeValue]}</span>\r\n      <button style={{marginLeft:'40px'}} type=\"button\" className=\"submit_btn\" value=\"Add Task\">Update Task</button>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Range;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EAC7D,MAAMO,WAAW,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,GAAG,CAAC;EAE3D,MAAMC,iBAAiB,GAAIC,CAAC,IAAK;IAC/BH,oBAAoB,CAACG,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACtC,CAAC;EACD,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAG;MACH,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,EAAE;QACnEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACd,iBAAiB;MAExC,CAAC,CAAC,CAACe,IAAI,CAACC,KAAK,CAAC,8BAA8B,CAAC,CAAC;IAChD,CAAC,CAAC,OAAMC,KAAK,EAAC;MACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB;EACF,CAAC;EAEC,oBACEpB,OAAA;IAAAuB,QAAA,gBACEvB,OAAA;MACEwB,QAAQ,EAAElB,iBAAkB;MAC5BmB,IAAI,EAAC,OAAO;MACZC,GAAG,EAAE,CAAE;MACPC,YAAY,EAAE,CAAE;MAChBC,GAAG,EAAE,EAAG;MACRC,IAAI,EAAE,CAAE;MACRC,IAAI,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC,eASFlC,OAAA;MAAMmC,EAAE,EAAC,QAAQ;MAAAZ,QAAA,EAAElB,WAAW,CAACF,iBAAiB;IAAC;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACzDlC,OAAA;MAAQoC,KAAK,EAAE;QAACC,UAAU,EAAC;MAAM,CAAE;MAACZ,IAAI,EAAC,QAAQ;MAACa,SAAS,EAAC,YAAY;MAAC7B,KAAK,EAAC,UAAU;MAAAc,QAAA,EAAC;IAAW;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE3G,CAAC;AAEV,CAAC;AAAChC,EAAA,CA9CID,KAAK;AAAAsC,EAAA,GAALtC,KAAK;AAgDX,eAAeA,KAAK;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}